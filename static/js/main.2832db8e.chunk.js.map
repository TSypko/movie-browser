{"version":3,"sources":["assets/images/star.svg","assets/images/video.svg","assets/images/arrowIcon.svg","assets/images/logo.svg","assets/images/search.svg","GlobalStyles.js","features/movies/moviesSlice.js","common/Main/styled.js","common/Main/index.js","common/Section/styled.js","common/Section/index.js","common/Tile/styled.js","common/Tile/GenreTile/styled.js","common/Tile/GenreTile/index.js","common/Tile/GenreSection/styled.js","common/Tile/GenreSection/index.js","common/Tile/VotesSection/styled.js","common/Tile/VotesSection/index.js","theme.js","common/Tile/index.js","common/LoadingSpinner/styled.js","common/LoadingSpinner/index.js","common/Pagination/Button/styled.js","common/Pagination/Button/index.js","common/Pagination/Icon/styled.js","common/Pagination/Icon/index.js","common/Pagination/PageInfo/styled.js","common/Pagination/PageInfo/index.js","common/Pagination/styled.js","common/Pagination/index.js","features/movies/MoviesPage/index.js","features/people/PeoplePage/index.js","common/Header/Logo/styled.js","common/Header/Logo/index.js","common/Header/Navigation/styled.js","common/Header/Navigation/index.js","routes.js","common/Header/SearchPanel/styled.js","common/Header/SearchPanel/index.js","common/Header/styled.js","common/Header/index.js","App.js","serviceWorker.js","apiClient.js","features/movies/moviesSaga.js","rootSaga.js","store.js","index.js"],"names":["module","exports","GlobalStyles","createGlobalStyle","normalize","theme","colors","Whisper","moviesSlice","createSlice","name","initialState","movies","loading","error","genres","reducers","fetchPopularMovies","state","fetchPopularMoviesSucces","payload","fetchPopularMoviesError","setGenres","actions","selectMoviesState","selectMovies","selectLoading","selectError","selectGenres","MainContainer","styled","main","breakpoints","mobileMax","Main","children","Title","h2","Woodsmoke","Container","div","grid","css","Section","title","body","StyledTile","White","horizontal","Poster","img","Silver","MovieDetails","section","MovieTitle","h3","MovieYear","p","Mystic","Black","InfoLabelSpan","span","StormGray","InfoSpan","MovieProduction","MovieRelease","MovieDescription","TileContainer","GenreTitle","GenreTile","genre","StyledSection","GenreSection","genresList","useSelector","map","key","findIndex","id","StarImage","Rate","Votes","Waterloo","OutOf10Span","VotesSection","rate","votes","src","Star","alt","Snuff","Mercury","headerMax","Tile","year","poster","production","release","description","useState","mobileContent","setMobileContent","mobileBreakpoint","slice","onWidthChange","window","innerWidth","useEffect","addEventListener","removeEventListener","posterPlaceholder","BaseWheel","RotatingQuarter","LoadingSpinner","StyledButton","button","ScienceBlue","MineShaft","PattensBlue","ButtonText","mobile","Button","disabled","buttonText","previous","StyledIcon","Icon","arrowIcon","Paragraph","PageCaption","number","PageInfo","type","page","total_pages","Footer","footer","Pagination","MoviesPage","dispatch","useDispatch","results","movie","poster_path","release_date","overview","genre_ids","vote_average","vote_count","PeoplePage","LogoWrapper","Logo","LogoImage","StyledNavLink","NavLink","attrs","activeClassName","List","ul","to","SearchInput","input","SearchIcon","SearchPanel","location","useLocation","placeholder","pathname","includes","StyledHeader","header","HeaderContainer","HeaderWrapper","Header","Navigation","App","path","Boolean","hostname","match","keyAndLanguageParameters","fetchFromApi","url","a","fetch","response","ok","Error","statusText","json","getPopularMovies","getPopularMoviesUrl","getGenres","fetchPopularMoviesHandler","moviesSaga","delay","call","popularMovies","put","console","takeLatest","rootSaga","all","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","moviesReducer","middleware","run","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,oC,uZCGpC,IAAMC,EAAeC,4BAAH,IAErBC,aAWc,qBAAGC,MAAkBC,OAAOC,W,uBCdxCC,EAAcC,YAAY,CAC5BC,KAAM,SACNC,aAAc,CACVC,OAAQ,GACRC,SAAS,EACTC,OAAO,EACPC,OAAQ,IAEZC,SAAU,CACNC,mBAAoB,SAACC,GACjBA,EAAML,SAAU,GAEpBM,yBAA0B,SAACD,EAAD,GAAiC,IAAdN,EAAa,EAAtBQ,QAChCF,EAAMN,OAASA,EACfM,EAAML,SAAU,EAChBK,EAAMJ,OAAQ,GAElBO,wBAAyB,SAACH,GACtBA,EAAML,SAAU,EAChBK,EAAMJ,OAAQ,GAElBQ,UAAW,SAACJ,EAAD,GAAiC,IAAdH,EAAa,EAAtBK,QACjBF,EAAMH,OAASA,EACfG,EAAML,SAAU,EAChBK,EAAMJ,OAAQ,M,EAUtBN,EAAYe,QAJZN,E,EAAAA,mBACAE,E,EAAAA,yBACAE,E,EAAAA,wBACAC,E,EAAAA,UAGSE,EAAoB,SAAAN,GAAK,OAAIA,EAAMN,QACnCa,EAAe,SAAAP,GAAK,OAAIM,EAAkBN,GAAON,QACjDc,EAAgB,SAAAR,GAAK,OAAIM,EAAkBN,GAAOL,SAClDc,EAAc,SAAAT,GAAK,OAAIM,EAAkBN,GAAOJ,OAChDc,EAAe,SAAAV,GAAK,OAAIM,EAAkBN,GAAOH,QAE/CP,IAAf,Q,qMC1CO,IAAMqB,EAAgBC,UAAOC,KAAV,KAIH,qBAAG1B,MAAkB2B,YAAYC,aCDzCC,EAFF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,kBAACN,EAAD,KAAgBM,I,kmBCDxC,IAAMC,EAAQN,UAAOO,GAAV,KAIP,qBAAGhC,MAAkBC,OAAOgC,aAGhB,qBAAGjC,MAAkB2B,YAAYC,aAS3CM,EAAYT,UAAOU,IAAV,KACT,qBAAGC,KAAmB,OAAS,WAGxC,qBAAGA,MAEHC,cADI,QCbOC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAMJ,EAAhB,EAAgBA,KAAhB,OACd,iCACE,kBAACL,EAAD,KAAQQ,GACR,kBAACL,EAAD,CAAWE,KAAMA,GAAOI,K,6zHCJrB,IAAMC,EAAahB,UAAOU,IAAV,KAMD,qBAAGnC,MAAkBC,OAAOyC,SAK3B,qBAAG1C,MAAkB2B,YAAYC,aAMpD,qBAAGe,YAEHN,cADU,KAQa,qBAAGrC,MAAkB2B,YAAYC,gBAa/CgB,GAASnB,UAAOoB,IAAV,KAIH,qBAAG7C,MAAkBC,OAAO6C,UAErB,qBAAG9C,MAAkB2B,YAAYC,aAMpD,qBAAGe,YAEHN,cADU,KAIa,qBAAGrC,MAAkB2B,YAAYC,gBAM/CmB,GAAetB,UAAOuB,QAAV,KAKF,qBAAGhD,MAAkB2B,YAAYC,aAIpD,qBAAGe,YAEHN,cADU,KAIa,qBAAGrC,MAAkB2B,YAAYC,gBAM/CqB,GAAaxB,UAAOyB,GAAV,KAKZ,qBAAGlD,MAAkBC,OAAOgC,aAEhB,qBAAGjC,MAAkB2B,YAAYC,aAKpD,qBAAGe,YAEHN,cADU,KAOa,qBAAGrC,MAAkB2B,YAAYC,gBAS/CuB,GAAY1B,UAAO2B,EAAV,KAKX,qBAAGpD,MAAkBC,OAAOoD,UAEhB,qBAAGrD,MAAkB2B,YAAYC,aAIpD,qBAAGe,YAEHN,cADU,KAMC,qBAAGrC,MAAkBC,OAAOqD,SAEhB,qBAAGtD,MAAkB2B,YAAYC,aAC3C,qBAAG5B,MAAkBC,OAAOoD,aAMhCE,GAAgB9B,UAAO+B,KAAV,KAEf,qBAAGxD,MAAkBC,OAAOwD,aAKhB,qBAAGzD,MAAkB2B,YAAYC,aAK3C8B,GAAWjC,UAAO+B,KAAV,KAKE,qBAAGxD,MAAkB2B,YAAYC,aAO3C+B,GAAkBlC,UAAO2B,EAAV,KAEL,qBAAGpD,MAAkB2B,YAAYC,aAK3CgC,GAAenC,UAAO2B,EAAV,KAEF,qBAAGpD,MAAkB2B,YAAYC,aAK3CiC,GAAmBpC,UAAO2B,EAAV,KAKN,qBAAGpD,MAAkB2B,YAAYC,a,2vBCrLjD,IAAMkC,GAAgBrC,UAAOU,IAAV,MAKJ,qBAAGnC,MAAkBC,OAAOoD,UAE3B,qBAAGrD,MAAkB2B,YAAYC,aAKpD,qBAAGe,YAEHN,cADU,MAIa,qBAAGrC,MAAkB2B,YAAYC,gBAM/CmC,GAAatC,UAAO2B,EAAV,MAKZ,qBAAGpD,MAAkBC,OAAOgC,aAMhB,qBAAGjC,MAAkB2B,YAAYC,aC3BzCoC,GANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOtB,EAAV,EAAUA,WAAV,OAChB,kBAACmB,GAAD,CAAenB,WAAYA,GACzB,kBAACoB,GAAD,KAAcE,K,iUCHX,IAAMC,GAAgBzC,UAAOU,IAAV,MAKtB,qBAAGQ,YAEHN,cADU,MAIa,qBAAGrC,MAAkB2B,YAAYC,gBCY7CuC,GAlBM,SAAC,GAA4B,IAA1BxB,EAAyB,EAAzBA,WAAYjC,EAAa,EAAbA,OAE5B0D,EAAaC,YAAY9C,GAE/B,OACE,kBAAC2C,GAAD,CAAevB,WAAYA,GACxByB,EAAW1D,SAAX,OAAqBA,QAArB,IAAqBA,OAArB,EAAqBA,EAAQ4D,KAAI,SAACL,GAAD,aAChC,kBAAC,GAAD,CACEM,IAAKN,EACLtB,WAAYA,EACZsB,MACEG,EAAW1D,OAAX,UAAmB0D,EAAW1D,cAA9B,aAAmB,EAAmB8D,WAAU,qBAAGC,KAAgBR,MAAS5D,a,olDCfjF,I,GAAM6D,GAAgBzC,UAAOuB,QAAV,MAMH,qBAAGhD,MAAkB2B,YAAYC,aAIpD,qBAAGe,YAEHN,cADU,MAIa,qBAAGrC,MAAkB2B,YAAYC,gBAM/C8C,GAAYjD,UAAOoB,IAAV,MAGC,qBAAG7C,MAAkB2B,YAAYC,aAK3C+C,GAAOlD,UAAO+B,KAAV,MAKN,qBAAGxD,MAAkBC,OAAOgC,aAEhB,qBAAGjC,MAAkB2B,YAAYC,aAMpD,qBAAGe,YAEHN,cADU,MAKC,qBAAGrC,MAAkBC,OAAOqD,YAK9BsB,GAAQnD,UAAO+B,KAAV,MAIP,qBAAGxD,MAAkBC,OAAO4E,YAEhB,qBAAG7E,MAAkB2B,YAAYC,aAMpD,qBAAGe,YAEHN,cADU,MAIC,qBAAGrC,MAAkBC,OAAOqD,YAK9BwB,GAAcrD,UAAO+B,KAAV,MAID,qBAAGxD,MAAkB2B,YAAYC,a,oBCpEzCmD,GATM,SAAC,GAAD,IAAGpC,EAAH,EAAGA,WAAYqC,EAAf,EAAeA,KAAMC,EAArB,EAAqBA,MAArB,OACnB,kBAAC,GAAD,CAAetC,WAAYA,GACzB,kBAAC+B,GAAD,CAAWQ,IAAKC,KAAMC,IAAI,WAC1B,kBAACT,GAAD,CAAMhC,WAAYA,GAAaqC,GAC9BrC,EAAa,kBAACmC,GAAD,aAAkC,KAChD,kBAACF,GAAD,CAAOjC,WAAYA,GAAasC,EAAhC,Y,6BCTSjF,GAAQ,CACnBC,QAAM,IACJyC,MAAO,UACP2C,MAAO,UACPvC,OAAQ,UACR5C,QAAS,UACToF,QAAS,UACTjC,OAAQ,WANJ,0BAOK,WAPL,8BAQS,WART,8BASS,WATT,2BAUM,WAVN,4BAWO,WAXP,4BAYO,WAZP,wBAaG,WAbH,IAgBN1B,YAAa,CACXC,UAAW,QACX2D,UAAW,UCsDAC,GAvDF,SAAC,GAAgG,IAA9F7C,EAA6F,EAA7FA,WAAYJ,EAAiF,EAAjFA,MAAOkD,EAA0E,EAA1EA,KAAMC,EAAoE,EAApEA,OAAQC,EAA4D,EAA5DA,WAAYC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,YAAanF,EAA0B,EAA1BA,OAAQsE,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAAY,EACjEa,oBAAS,GADwD,mBACpGC,EADoG,KACrFC,EADqF,KAErGC,GAAoBjG,GAAM2B,YAAYC,UAAUsE,MAAM,GAAI,GAC1DC,EAAgB,WAChBC,OAAOC,YAAcJ,EACvBD,GAAiB,GAEjBA,GAAiB,IAUrB,OANAM,qBAAU,WAGR,OAFAH,IACAC,OAAOG,iBAAiB,SAAUJ,GAC3B,kBAAMC,OAAOI,oBAAoB,SAAUL,OAIlD,kBAAC1D,EAAD,CAAYE,WAAYA,GACtB,kBAACC,GAAD,CACED,WAAYA,EACZuC,IACEQ,EAAM,yCACgCA,GAClCe,KAENrB,IAAG,mBAAc7C,EAAd,aACL,kBAACQ,GAAD,CAAcJ,WAAYA,GACxB,kBAACM,GAAD,CAAYN,WAAYA,GAAaJ,GACrC,kBAACY,GAAD,CAAWR,WAAYA,GAAa8C,EAAKS,MAAM,EAAG,IACjDvD,EACC,oCACE,kBAACgB,GAAD,KACE,kBAACJ,GAAD,oBACA,kBAACG,GAAD,KAAWiC,IAEb,kBAAC/B,GAAD,KACE,kBAACL,GAAD,sBACA,kBAACG,GAAD,KAAWkC,KAGb,KACJ,kBAAC,GAAD,CAAcjD,WAAYA,EAAYjC,OAAQA,IAC9C,kBAAC,GAAD,CAAciC,WAAYA,EAAYqC,KAAMA,EAAMC,MAAOA,IACxDtC,IAAeoD,EACd,kBAAClC,GAAD,KAAmBgC,GACjB,MAELlD,GAAcoD,EACb,kBAAClC,GAAD,KAAmBgC,GACjB,O,s+CClEH,IAAM3D,GAAYT,UAAOU,IAAV,MAGC,qBAAGnC,MAAkB2B,YAAYC,aAK3C8E,GAAYjF,UAAOU,IAAV,MAMC,qBAAGnC,MAAkBC,OAAOoF,SAG5B,qBAAGrF,MAAkB2B,YAAYC,aAO3C+E,GAAkBlF,UAAOU,IAAV,MAQL,qBAAGnC,MAAkBC,OAAOqD,SAgB5B,qBAAGtD,MAAkB2B,YAAYC,aCvCzCgF,GARQ,kBACrB,kBAAC,GAAD,KACE,kBAACF,GAAD,KACE,kBAACC,GAAD,S,w4BCJC,IAAME,GAAepF,UAAOqF,OAAV,MASJ,qBAAG9G,MAAkBC,OAAO8G,eACpC,qBAAG/G,MAAkBC,OAAO+G,aACvB,qBAAGhH,MAAkBC,OAAOgH,eAErB,qBAAGjH,MAAkB2B,YAAYC,aAczC,qBAAG5B,MAAkBC,OAAOgC,aACvB,qBAAGjC,MAAkBC,OAAOoD,UAQrC6D,GAAazF,UAAO+B,KAAV,MACb,qBAAG2D,QAAuB9E,cAAJ,MAEH,qBAAGrC,MAAkB2B,YAAYC,gBClB/CwF,GApBA,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,SAAU7E,EAAiC,EAAjCA,KAAM8E,EAA2B,EAA3BA,WAC9B,OADyD,EAAfC,SAIlC,kBAACV,GAAD,CAAcQ,SAAUA,GACnB7E,EACD,kBAAC0E,GAAD,CAAYC,QAAM,GACbG,IAIT,kBAACT,GAAD,CAAcQ,SAAUA,GACpB,kBAACH,GAAD,CAAYC,QAAM,GACbG,GAEJ9E,I,k0BChBV,IAAMgF,GAAa/F,UAAOoB,IAAV,MAKF,qBAAG7C,MAAkB2B,YAAYC,aAKpD,qBAAGuF,QAAuB9E,cAAJ,MAGC,qBAAGrC,MAAkB2B,YAAYC,gBAKxD,qBAAG2F,UAA2BlF,cAAJ,MAIH,qBAAGrC,MAAkB2B,YAAYC,gBAKxD,qBAAGyF,UAA2BhF,cAAJ,S,oBCbboF,GAZF,SAAC,GAAyC,IAAvCJ,EAAsC,EAAtCA,SAAUE,EAA4B,EAA5BA,SAAUnC,EAAkB,EAAlBA,IAAK+B,EAAa,EAAbA,OACrC,OACI,kBAACK,GAAD,CACID,SAAUA,EACVF,SAAUA,EACVnC,IAAKwC,KACLtC,IAAKA,EACL+B,OAAQA,K,+gBCTb,IAAMQ,GAAYlG,UAAO2B,EAAV,MAGG,qBAAGpD,MAAkB2B,YAAYC,aAM7CgG,GAAcnG,UAAO+B,KAAV,MAGX,qBAAGxD,MAAkBC,OAAO4E,YAEnC,qBAAGgD,QAAuBxF,cAAJ,MAEX,qBAAGrC,MAAkBC,OAAOgC,gBAGpB,qBAAGjC,MAAkB2B,YAAYC,aCQ3CkG,GAxBE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEVxH,EAAS8D,YAAYjD,GAE3B,OACI,kBAACuG,GAAD,KACI,kBAACC,GAAD,aAGA,kBAACA,GAAD,CAAaC,QAAM,GACL,WAATE,GAAqBxH,EAAOyH,MAGjC,kBAACJ,GAAD,WAGA,kBAACA,GAAD,CAAaC,QAAM,GACL,WAATE,GAAqBxH,EAAO0H,e,4KCpBtC,IAAMC,GAASzG,UAAO0G,OAAV,MCyEJC,GArEI,SAAC,GAAc,IAAZL,EAAW,EAAXA,KACpB,OACE,kBAACG,GAAD,KACE,kBAAC,GAAD,CACEX,UAAQ,EACRD,WAAW,QACXD,UAAU,EACV7E,KACE,oCACE,kBAAC,GAAD,CACE2E,QAAM,EACNI,UAAQ,EACRF,UAAU,EACVjC,IAAI,8BAEN,kBAAC,GAAD,CACEmC,UAAQ,EACRF,UAAU,EACVjC,IAAI,oCAIZ,kBAAC,GAAD,CACEmC,UAAQ,EACRD,WAAW,WACXD,UAAU,EACV7E,KACE,oCACE,kBAAC,GAAD,CACE+E,UAAQ,EACRF,UAAU,EACVjC,IAAI,iCAKZ,kBAAC,GAAD,CAAU2C,KAAMA,IAEhB,kBAAC,GAAD,CACET,WAAW,OACXD,UAAU,EACV7E,KACE,oCACE,kBAAC,GAAD,CACE6E,UAAU,EACVjC,IAAI,gCAIZ,kBAAC,GAAD,CACEkC,WAAW,OACXD,UAAU,EACV7E,KACE,oCACE,kBAAC,GAAD,CACE6E,UAAU,EACVjC,IAAI,6BAEN,kBAAC,GAAD,CACE+B,QAAM,EACNE,UAAU,EACVjC,IAAI,kCCfHiD,GA3CI,WAAO,IAAD,EAEjBC,EAAWC,cACXhI,EAAS8D,YAAYjD,GACrBZ,EAAU6D,YAAYhD,GACtBZ,EAAQ4D,YAAY/C,GAM1B,OAJAgF,qBAAU,WACRgC,EAAS1H,OACR,CAAC0H,IAGF,oCACG9H,GAAW,kBAAC,GAAD,MACXC,GAAS,uCACTF,EAAOiI,SACN,oCACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEpG,MAAI,EACJG,MAAM,iBACNC,KAAI,UACFjC,EAAOiI,eADL,aACF,EAAgBlE,KAAI,SAAAmE,GAAK,OACvB,kBAAC,GAAD,CACElE,IAAKkE,EAAMhE,GACXlC,MAAOkG,EAAMlG,MACbmD,OAAQ+C,EAAMC,YACdjD,KAAMgD,EAAME,aACZ9C,YAAa4C,EAAMG,SACnBlI,OAAQ+H,EAAMI,UACd7D,KAAMyD,EAAMK,aACZ7D,MAAOwD,EAAMM,mBAKvB,kBAAC,GAAD,CAAYhB,KAAK,cCnCZiB,GARI,WACf,OACI,gD,6aCFD,IAAMC,GAAcxH,UAAOU,IAAV,MAUA,qBAAGnC,MAAkB2B,YAAYC,aAK5C6F,GAAOhG,UAAOoB,IAAV,M,oBCNFqG,GAPF,kBACT,kBAACD,GAAD,KACI,kBAAC,GAAD,CAAM/D,IAAKiE,KAAW/D,IAAI,sBAD9B,kB,8lBCFJ,IAEagE,GAAgB3H,kBAAO4H,KAASC,MAAM,CAAEC,gBAF7B,eAEK9H,CAAH,MAGb,qBAAGzB,MAAkBC,OAAOyC,QALjB,eAaI,qBAAG1C,MAAkBC,OAAOyC,SAKhC,qBAAG1C,MAAkB2B,YAAYC,aAM5C4H,GAAO/H,UAAOgI,GAAV,MAGO,qBAAGzJ,MAAkB2B,YAAYC,aC1B1C,cACX,OACI,6BACI,kBAAC4H,GAAD,KACI,kBAACJ,GAAD,CAAeM,GCRD,WDQd,UACA,kBAACN,GAAD,CAAeM,GCRD,WDQd,a,scENT,IAAMC,GAAclI,UAAOmI,MAAV,MAGN,qBAAG5J,MAAkBC,OAAOyC,QAAamH,MACnC,qBAAG7J,MAAkBC,OAAOoD,UAO5B,qBAAGrD,MAAkB2B,YAAY4D,aCC1CuE,GAVK,WAChB,IAAMC,EAAWC,cAEjB,OACI,kBAACL,GAAD,CACIM,YAAW,qBAAgBF,EAASG,SAASC,SFV3B,WEUkD,SAAU,SAAnE,U,8kBCRhB,IAAMC,GAAe3I,UAAO4I,OAAV,MACZ,qBAAGrK,MAAkBC,OAAOyC,SACjB,qBAAG1C,MAAkBC,OAAOqD,SAGvCgH,GAAkB7I,UAAOU,IAAV,MAQJ,qBAAGnC,MAAkB2B,YAAY4D,aAK5CgF,GAAgB9I,UAAOU,IAAV,MAIF,qBAAGnC,MAAkB2B,YAAY4D,aCN1CiF,GAZA,kBACX,kBAACJ,GAAD,KACI,kBAACE,GAAD,KACI,kBAACC,GAAD,KACI,kBAAC,GAAD,MACA,kBAACE,GAAD,OAEJ,kBAAC,GAAD,SCaGC,OAnBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KLZe,WKapB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KLde,WKepB,kBAAC,GAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUjB,GLnBU,gBMYVkB,QACW,cAA7BxE,OAAO2D,SAASc,UAEe,UAA7BzE,OAAO2D,SAASc,UAEhBzE,OAAO2D,SAASc,SAASC,MACvB,2D,mDChBAC,GAAwB,kBAFf,mCAEe,qBADb,SAeXC,GAAY,yCAAG,WAAOC,GAAP,gBAAAC,EAAA,sEACMC,MAAMF,GADZ,cACXG,EADW,QAGHC,IACV,IAAIC,MAAMF,EAASG,YAJN,SAOJH,EAASI,OAPL,mFAAH,sDAYLC,GAAmB,SAAAzD,GAAI,OAAIgD,GAtBZ,SAAAhD,GAAI,2DAAkD+C,GAAlD,iBAAmF/C,GAsB9D0D,CAAoB1D,KAM5D2D,GAAY,kBAAMX,GApBV,wDAAuDD,M,aCVlEa,I,aAaOC,IAbjB,SAAUD,KAAV,0EAEQ,OAFR,kBAEcE,aAAM,KAFpB,OAG8B,OAH9B,SAGoCC,aAAKN,IAHzC,OAIuB,OADTO,EAHd,gBAI6BD,aAAKJ,IAJlC,OAKQ,OADMjL,EAJd,iBAKcuL,aAAInL,EAAyBkL,IAL3C,QAMQ,OANR,UAMcC,aAAIhL,EAAUP,IAN5B,gCAQQ,OARR,oCAQcuL,aAAIjL,KARlB,QASQkL,QAAQzL,MAAR,MATR,uDAaO,SAAUoL,KAAV,kEACH,OADG,SACGM,aAAWvL,EAAmBmH,KAAM6D,IADvC,wC,iBCdkBQ,IAAV,SAAUA,KAAV,kEACX,OADW,SACLC,aAAI,CACNR,OAFO,wCCEf,IAAMS,GAAiBC,eAEjBC,GAAQC,YAAe,CACzBC,QAAS,CACLnM,OAAQoM,GAEZC,WAAY,CAACN,MAGjBA,GAAeO,IAAIT,IAEJI,UCNfM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,gBAAD,CAAehN,MAAOA,IACpB,kBAACH,EAAD,MACA,kBAAC,IAAD,CAAU2M,MAAOA,IACf,kBAAC,GAAD,SAINS,SAASC,eAAe,SLgHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhN,GACLyL,QAAQzL,MAAMA,EAAMiN,c","file":"static/js/main.2832db8e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/star.b489e613.svg\";","module.exports = __webpack_public_path__ + \"static/media/video.66e2a949.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrowIcon.cba12d72.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.cdf24f10.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.9a86aa04.svg\";","import { createGlobalStyle } from \"styled-components\";\r\nimport { normalize } from \"styled-normalize\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n  ${normalize}\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *, ::after, ::before {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  body {\r\n    background: ${({ theme }) => theme.colors.Whisper};\r\n    font-family: 'Poppins', sans-serif;\r\n  }\r\n`","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst moviesSlice = createSlice({\r\n    name: \"movies\",\r\n    initialState: {\r\n        movies: [],\r\n        loading: false,\r\n        error: false,\r\n        genres: [],\r\n    },\r\n    reducers: {\r\n        fetchPopularMovies: (state) => {\r\n            state.loading = true;\r\n        },\r\n        fetchPopularMoviesSucces: (state, { payload: movies }) => {\r\n            state.movies = movies;\r\n            state.loading = false;\r\n            state.error = false;\r\n        },\r\n        fetchPopularMoviesError: (state) => {\r\n            state.loading = false;\r\n            state.error = true;\r\n        },\r\n        setGenres: (state, { payload: genres }) => {\r\n            state.genres = genres;\r\n            state.loading = false;\r\n            state.error = false;\r\n        }\r\n    }\r\n});\r\n\r\nexport const {\r\n    fetchPopularMovies,\r\n    fetchPopularMoviesSucces,\r\n    fetchPopularMoviesError,\r\n    setGenres,\r\n} = moviesSlice.actions;\r\n\r\nexport const selectMoviesState = state => state.movies;\r\nexport const selectMovies = state => selectMoviesState(state).movies;\r\nexport const selectLoading = state => selectMoviesState(state).loading;\r\nexport const selectError = state => selectMoviesState(state).error;\r\nexport const selectGenres = state => selectMoviesState(state).genres;\r\n\r\nexport default moviesSlice.reducer;","import styled from \"styled-components\";\r\n\r\nexport const MainContainer = styled.main`\r\n  max-width: 1368px;\r\n  margin: 56px auto 40px auto;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    margin: 24px auto 32px auto;\r\n  } ;\r\n`;\r\n","import React from \"react\";\r\nimport { MainContainer } from \"./styled\";\r\n\r\nconst Main = ({ children }) => <MainContainer>{children}</MainContainer>;\r\n\r\nexport default Main;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 36px;\r\n  line-height: 1.2;\r\n  font-weight: 600;\r\n  color: ${({ theme }) => theme.colors.Woodsmoke};\r\n  margin: 0 0 24px 0;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    text-align: center;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n    line-height: 1.2;\r\n    margin: 0 0 12px 0;\r\n  } ;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  display: ${({ grid }) => (grid ? \"grid\" : \"block\")};\r\n  margin: 0 auto;\r\n\r\n  ${({ grid }) =>\r\n    grid &&\r\n    css`\r\n      grid-template-columns: repeat(auto-fill, minmax(324px, 1fr));\r\n      grid-gap: 24px;\r\n    `}\r\n`;\r\n","import React from \"react\";\r\nimport { Container, Title } from \"./styled\";\r\n\r\nconst Section = ({ title, body, grid }) => (\r\n  <section>\r\n    <Title>{title}</Title>\r\n    <Container grid={grid}>{body}</Container>\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledTile = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 324px;\r\n  min-height: 650px;\r\n  border-radius: 5px;\r\n  background-color: ${({ theme }) => theme.colors.White};\r\n  padding: 16px;\r\n  box-shadow: 0px 4px 12px rgba(186, 199, 213, 0.5);\r\n  justify-self: center;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    flex-direction: row;\r\n    width: 288px;\r\n    min-height: 201px;\r\n  }\r\n\r\n  ${({ horizontal }) =>\r\n    horizontal &&\r\n    css`\r\n      flex-direction: row;\r\n      min-height: 544px;\r\n      width: auto;\r\n      padding: 40px;\r\n      border-radius: 0;\r\n\r\n      @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n        display: grid;\r\n        grid-template-areas:\r\n          \"poster movieDetails\"\r\n          \"movieDescription movieDescription\";\r\n        grid-template-columns: 122px 1fr;\r\n        width: 288px;\r\n        padding: 16px;\r\n        box-shadow: 0px 4px 12px rgba(186, 199, 213, 0.5);\r\n      }\r\n    `};\r\n`;\r\n\r\nexport const Poster = styled.img`\r\n  width: 292px;\r\n  height: 434px;\r\n  border-radius: 5px;\r\n  background: ${({ theme }) => theme.colors.Silver};\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    width: 114px;\r\n    height: 169px;\r\n    margin-right: 8px;\r\n  }\r\n\r\n  ${({ horizontal }) =>\r\n    horizontal &&\r\n    css`\r\n      margin-right: 20px;\r\n\r\n      @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n        grid-area: poster;\r\n      }\r\n    `};\r\n`;\r\n\r\nexport const MovieDetails = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex-grow: 1;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    margin-left: 8px;\r\n  }\r\n\r\n  ${({ horizontal }) =>\r\n    horizontal &&\r\n    css`\r\n      margin-left: 20px;\r\n\r\n      @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n        grid-area: movieDetails;\r\n      }\r\n    `};\r\n`;\r\n\r\nexport const MovieTitle = styled.h3`\r\n  margin: 16px 0 8px 0;\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.3;\r\n  color: ${({ theme }) => theme.colors.Woodsmoke};\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    font-size: 16px;\r\n    margin: 0 0 4px 0;\r\n  }\r\n\r\n  ${({ horizontal }) =>\r\n    horizontal &&\r\n    css`\r\n      margin: 8px 0 12px 0;\r\n      font-size: 36px;\r\n      font-weight: 600;\r\n      line-height: 1.2;\r\n\r\n      @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n        font-size: 16px;\r\n        font-weight: 500;\r\n        line-height: 1.3;\r\n        margin: 0 0 2px 0;\r\n      } ;\r\n    `};\r\n`;\r\n\r\nexport const MovieYear = styled.p`\r\n  margin: 0;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  line-height: 1.5;\r\n  color: ${({ theme }) => theme.colors.Mystic};\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    font-size: 13px;\r\n  }\r\n\r\n  ${({ horizontal }) =>\r\n    horizontal &&\r\n    css`\r\n      margin: 12px 0;\r\n      font-size: 22px;\r\n      font-weight: normal;\r\n      line-height: 1.2;\r\n      color: ${({ theme }) => theme.colors.Black};\r\n\r\n      @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n        color: ${({ theme }) => theme.colors.Mystic};\r\n        margin: 2px 0 4px 0;\r\n      } ;\r\n    `};\r\n`;\r\n\r\nexport const InfoLabelSpan = styled.span`\r\n  display: inline-block;\r\n  color: ${({ theme }) => theme.colors.StormGray};\r\n  margin-right: 10px;\r\n  font-size: 18px;\r\n  line-height: 1.2;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    display: none;\r\n  } ;\r\n`;\r\n\r\nexport const InfoSpan = styled.span`\r\n  display: inline-block;\r\n  font-size: 18px;\r\n  line-height: 1.2;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    font-size: 12px;\r\n    line-height: 1.3;\r\n    margin: 4px 0;\r\n  } ;\r\n`;\r\n\r\nexport const MovieProduction = styled.p`\r\n  margin: 12px 0 4px 0;\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    margin: 0;\r\n  } ;\r\n`;\r\n\r\nexport const MovieRelease = styled.p`\r\n  margin: 4px 0 12px 0;\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    margin: 0;\r\n  } ;\r\n`;\r\n\r\nexport const MovieDescription = styled.p`\r\n  margin-top: 12px;\r\n  font-size: 20px;\r\n  line-height: 1.6;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    grid-area: movieDescription;\r\n    font-size: 14px;\r\n    margin: 24px 0 0 0;\r\n  }\r\n`;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const TileContainer = styled.div`\r\n  padding: 8px 16px;\r\n  margin: 0 8px 8px 0;\r\n  height: 36px;\r\n  border-radius: 5px;\r\n  background-color: ${({ theme }) => theme.colors.Mystic};\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    height: 19px;\r\n    padding: 4px 8px;\r\n  }\r\n\r\n  ${({ horizontal }) =>\r\n    horizontal &&\r\n    css`\r\n      margin: 0 16px 8px 0;\r\n\r\n      @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n        margin: 0 8px 8px 0;\r\n      }\r\n    `};\r\n`;\r\n\r\nexport const GenreTitle = styled.p`\r\n  font-size: 14px;\r\n  font-weight: 400;\r\n  line-height: 1.4;\r\n  margin: auto;\r\n  color: ${({ theme }) => theme.colors.Woodsmoke};\r\n\r\n  &::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    font-size: 10px;\r\n    line-height: 1.1;\r\n  } ;\r\n`;\r\n","import React from \"react\";\r\nimport { TileContainer, GenreTitle } from \"./styled\";\r\n\r\nconst GenreTile = ({ genre, horizontal }) => (\r\n  <TileContainer horizontal={horizontal}>\r\n    <GenreTitle >{genre}</GenreTitle>\r\n  </TileContainer>\r\n);\r\n\r\nexport default GenreTile;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledSection = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-top: 8px;\r\n\r\n  ${({ horizontal }) =>\r\n    horizontal &&\r\n    css`\r\n      margin: 12px 0 4px 0;\r\n\r\n      @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n        margin: 4px 0 0 0;\r\n      } ;\r\n    `};\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport GenreTile from \"../GenreTile\";\r\nimport { StyledSection } from \"./styled\";\r\nimport { selectGenres } from \"../../../features/movies/moviesSlice\"\r\n\r\nconst GenreSection = ({ horizontal, genres }) => {\r\n\r\n  const genresList = useSelector(selectGenres);\r\n\r\n  return (\r\n    <StyledSection horizontal={horizontal}>\r\n      {genresList.genres && genres?.map((genre) =>\r\n        <GenreTile\r\n          key={genre}\r\n          horizontal={horizontal}\r\n          genre={\r\n            genresList.genres[(genresList.genres?.findIndex(({ id }) => id === genre))].name\r\n          } />\r\n      )}\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nexport default GenreSection;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledSection = styled.section`\r\n  margin-top: auto;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    margin-top: 4px;\r\n  }\r\n\r\n  ${({ horizontal }) =>\r\n    horizontal &&\r\n    css`\r\n      margin: 12px 0;\r\n\r\n      @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n        margin-bottom: 0;\r\n      }\r\n    `};\r\n`;\r\n\r\nexport const StarImage = styled.img`\r\n  width: 22px;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    width: 16px;\r\n  }\r\n`;\r\n\r\nexport const Rate = styled.span`\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  line-height: 1.5;\r\n  margin: 0 12px;\r\n  color: ${({ theme }) => theme.colors.Woodsmoke};\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    font-size: 13px;\r\n    line-height: 1.3;\r\n    margin: 0 7px 0 8px;\r\n  }\r\n\r\n  ${({ horizontal }) =>\r\n    horizontal &&\r\n    css`\r\n      font-size: 22px;\r\n      font-weight: 500;\r\n      line-height: 1.3;\r\n      color: ${({ theme }) => theme.colors.Black};\r\n      margin: 0 8px;\r\n    `};\r\n`;\r\n\r\nexport const Votes = styled.span`\r\n  margin: 0 6px;\r\n  font-size: 16px;\r\n  line-height: 1.5;\r\n  color: ${({ theme }) => theme.colors.Waterloo};\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    font-size: 13px;\r\n    line-height: 1.3;\r\n    margin: 0;\r\n  }\r\n\r\n  ${({ horizontal }) =>\r\n    horizontal &&\r\n    css`\r\n      font-size: 14px;\r\n      line-height: 1.2;\r\n      color: ${({ theme }) => theme.colors.Black};\r\n      margin: 0 12px;\r\n    `};\r\n`;\r\n\r\nexport const OutOf10Span = styled.span`\r\n  font-size: 14px;\r\n  line-height: 1.2;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    display: none;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { StyledSection, StarImage, Rate, Votes, OutOf10Span } from \"./styled\";\r\nimport Star from \"../../../assets/images/star.svg\";\r\n\r\nconst VotesSection = ({ horizontal, rate, votes }) => (\r\n  <StyledSection horizontal={horizontal}>\r\n    <StarImage src={Star} alt=\"vector\" />\r\n    <Rate horizontal={horizontal}>{rate}</Rate>\r\n    {horizontal ? <OutOf10Span>/ 10</OutOf10Span> : null}\r\n    <Votes horizontal={horizontal}>{votes} votes</Votes>\r\n  </StyledSection>\r\n);\r\n\r\nexport default VotesSection;\r\n","export const theme = {\r\n  colors: {\r\n    White: \"#FFFFFF\",\r\n    Snuff: \"#DDDDEE\",\r\n    Silver: \"#C4C4C4\",\r\n    Whisper: \"#F5F5FA\",\r\n    Mercury: \"#E5E5E5\",\r\n    Mystic: \"#E4E6F0\",\r\n    Whisper: \"#F5F5FA\",\r\n    PattensBlue: \"#D6E4FF\",\r\n    ScienceBlue: \"#0044CC\",\r\n    Waterloo: \"#7E839A\",\r\n    StormGray: \"#74788B\",\r\n    Woodsmoke: \"#18181B\",\r\n    Black: \"#000000\",\r\n  },\r\n\r\n  breakpoints: {\r\n    mobileMax: \"568px\",\r\n    headerMax: \"767px\"\r\n  },\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  StyledTile,\r\n  Poster,\r\n  MovieTitle,\r\n  MovieYear,\r\n  MovieProduction,\r\n  MovieRelease,\r\n  MovieDetails,\r\n  MovieDescription,\r\n  InfoLabelSpan,\r\n  InfoSpan,\r\n} from \"./styled\";\r\nimport GenreSection from \"./GenreSection\";\r\nimport VotesSection from \"./VotesSection\";\r\nimport posterPlaceholder from \"../../assets/images/video.svg\";\r\nimport { theme } from \"../../theme\";\r\n\r\nconst Tile = ({ horizontal, title, year, poster, production, release, description, genres, rate, votes }) => {\r\n  const [mobileContent, setMobileContent] = useState(false);\r\n  const mobileBreakpoint = +theme.breakpoints.mobileMax.slice(0, -2);\r\n  const onWidthChange = () => {\r\n    if (window.innerWidth <= mobileBreakpoint) {\r\n      setMobileContent(true);\r\n    } else {\r\n      setMobileContent(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    onWidthChange();\r\n    window.addEventListener(\"resize\", onWidthChange);\r\n    return () => window.removeEventListener(\"resize\", onWidthChange);\r\n  });\r\n\r\n  return (\r\n    <StyledTile horizontal={horizontal}>\r\n      <Poster\r\n        horizontal={horizontal}\r\n        src={\r\n          poster\r\n            ? `https://image.tmdb.org/t/p/w342${poster}`\r\n            : posterPlaceholder\r\n        }\r\n        alt={`Image of ${title} poster`} />\r\n      <MovieDetails horizontal={horizontal}>\r\n        <MovieTitle horizontal={horizontal}>{title}</MovieTitle>\r\n        <MovieYear horizontal={horizontal}>{year.slice(0, 4)}</MovieYear>\r\n        {horizontal ? (\r\n          <>\r\n            <MovieProduction>\r\n              <InfoLabelSpan>Production:</InfoLabelSpan>\r\n              <InfoSpan>{production}</InfoSpan>\r\n            </MovieProduction>\r\n            <MovieRelease>\r\n              <InfoLabelSpan>Release date:</InfoLabelSpan>\r\n              <InfoSpan>{release}</InfoSpan>\r\n            </MovieRelease>\r\n          </>\r\n        ) : null}\r\n        <GenreSection horizontal={horizontal} genres={genres} />\r\n        <VotesSection horizontal={horizontal} rate={rate} votes={votes} />\r\n        {horizontal && !mobileContent ? (\r\n          <MovieDescription>{description}</MovieDescription>\r\n        ) : null}\r\n      </MovieDetails>\r\n      {horizontal && mobileContent ? (\r\n        <MovieDescription>{description}</MovieDescription>\r\n      ) : null}\r\n    </StyledTile>\r\n  );\r\n};\r\n\r\nexport default Tile;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  margin: 120px 0 0;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    margin: 24px 0 0;\r\n  }\r\n`;\r\n\r\nexport const BaseWheel = styled.div`\r\n  position: relative;\r\n  margin: 0 auto;\r\n  width: 90px;\r\n  height: 90px;\r\n  border-radius: 50%;\r\n  border: 12px solid ${({ theme }) => theme.colors.Snuff};\r\n  background-color: transparent;\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    width: 36px;\r\n    height: 36px;\r\n    border-width: 6px;\r\n  }\r\n`;\r\n\r\nexport const RotatingQuarter = styled.div`\r\n  width: 45px;\r\n  height: 45px;\r\n  transform: translate(-12px, -12px) rotateZ(0deg);\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 45px;\r\n  border-top-right-radius: 100%;\r\n  border: 12px solid ${({ theme }) => theme.colors.Black};\r\n  border-bottom: none;\r\n  border-left: none;\r\n  animation: rotatingAnimation 1s infinite linear;\r\n  transform-origin: 0 100%;\r\n\r\n  @keyframes rotatingAnimation {\r\n    from {\r\n      transform: translate(-12px, -12px) rotateZ(0);\r\n    }\r\n\r\n    to {\r\n      transform: translate(-12px, -12px) rotateZ(360deg);\r\n    }\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    width: 18px;\r\n    height: 18px;\r\n    transform: translate(-6px, -6px) rotateZ(0deg);\r\n    border-width: 6px;\r\n    left: 18px;\r\n    animation: rotatingAnimationMobile 1s infinite linear;\r\n\r\n    @keyframes rotatingAnimationMobile {\r\n      from {\r\n        transform: translate(-6px, -6px) rotateZ(0);\r\n      }\r\n\r\n      to {\r\n        transform: translate(-6px, -6px) rotateZ(360deg);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Container, BaseWheel, RotatingQuarter } from \"./styled\";\r\n\r\nconst LoadingSpinner = () => (\r\n  <Container>\r\n    <BaseWheel>\r\n      <RotatingQuarter />\r\n    </BaseWheel>\r\n  </Container>\r\n);\r\n\r\nexport default LoadingSpinner;\r\n","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledButton = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 8px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.4;\r\n    border: none;\r\n    border-radius: 5px;\r\n    margin: 12px 6px;\r\n    outline-color: ${({ theme }) => theme.colors.ScienceBlue};\r\n    color: ${({ theme }) => theme.colors.MineShaft};\r\n    background: ${({ theme }) => theme.colors.PattensBlue};\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n            margin: 12px 4px;\r\n            padding: 8px;\r\n    }\r\n\r\n    &:hover {\r\n        filter:brightness(95%);\r\n    }\r\n\r\n    &:active {\r\n        filter:brightness(92%);\r\n    }\r\n\r\n    &:disabled {\r\n        color: ${({ theme }) => theme.colors.Woodsmoke};\r\n        background: ${({ theme }) => theme.colors.Mystic};\r\n\r\n        &:hover {\r\n            filter: none;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ButtonText = styled.span`\r\n        ${({ mobile }) => mobile && css`\r\n\r\n        @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n            display: none;\r\n        }\r\n    `}\r\n`;","import React from 'react';\r\nimport { ButtonText, StyledButton } from './styled';\r\n\r\nconst Button = ({ disabled, body, buttonText, previous }) => {\r\n    return (\r\n        previous\r\n            ?\r\n            <StyledButton disabled={disabled}>\r\n                {body}\r\n                <ButtonText mobile>\r\n                    {buttonText}\r\n                </ButtonText>\r\n            </StyledButton>\r\n            :\r\n            <StyledButton disabled={disabled}>\r\n                <ButtonText mobile>\r\n                    {buttonText}\r\n                </ButtonText>\r\n                {body}\r\n            </StyledButton>\r\n    )\r\n}\r\n\r\nexport default Button;","import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledIcon = styled.img`\r\nheight: 11px;\r\nmargin-left: 8px;\r\nfilter: invert(18%) sepia(100%) saturate(2516%) hue-rotate(213deg) brightness(96%) contrast(103%);\r\n\r\n@media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n    height: 8px;\r\n    margin: 0px 2px;\r\n    }\r\n\r\n${({ mobile }) => mobile && css`\r\n    display: none;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n        display: unset;\r\n    }\r\n`}\r\n\r\n${({ previous }) => previous && css`\r\n    margin-right: 8px;\r\n    transform: rotate(180deg);\r\n    \r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n        margin: 0px 2px;\r\n    }\r\n`}\r\n\r\n${({ disabled }) => disabled && css`\r\n    filter: invert(57%) sepia(7%) saturate(938%) hue-rotate(192deg) brightness(89%) contrast(91%);\r\n`}\r\n`;","import React from 'react';\r\nimport { StyledIcon } from './styled';\r\nimport arrowIcon from \"../../../assets/images/arrowIcon.svg\";\r\n\r\nconst Icon = ({ disabled, previous, alt, mobile }) => {\r\n    return (\r\n        <StyledIcon\r\n            previous={previous}\r\n            disabled={disabled}\r\n            src={arrowIcon}\r\n            alt={alt}\r\n            mobile={mobile}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Icon;","import styled, { css } from \"styled-components\";\r\n\r\nexport const Paragraph = styled.p`\r\n    margin: 12px 16px;\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n        font-size: 10px;\r\n        margin: 12px 4px;\r\n    }\r\n`;\r\n\r\nexport const PageCaption = styled.span`\r\n    line-height: 1.5;\r\n    margin: 0px 4px;\r\n    color: ${({ theme }) => theme.colors.Waterloo};\r\n\r\n    ${({ number }) => number && css`\r\n        font-weight: 600;\r\n        color: ${({ theme }) => theme.colors.Woodsmoke};\r\n    `}\r\n\r\n    @media (max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n        margin: 0px 1px;\r\n    }\r\n`;","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { selectMovies } from '../../../features/movies/moviesSlice';\r\nimport { PageCaption, Paragraph } from './styled';\r\n\r\nconst PageInfo = ({ type }) => {\r\n\r\n    const movies = useSelector(selectMovies);\r\n\r\n    return (\r\n        <Paragraph>\r\n            <PageCaption>\r\n                Page\r\n            </PageCaption>\r\n            <PageCaption number>\r\n                {type === \"movies\" && movies.page}\r\n                {/* {type === \"people\" && people?.page} */}\r\n            </PageCaption>\r\n            <PageCaption>\r\n                of\r\n            </PageCaption>\r\n            <PageCaption number>\r\n                {type === \"movies\" && movies.total_pages}\r\n                {/* {type === \"people\" && people?.total_pages} */}\r\n            </PageCaption>\r\n        </Paragraph>\r\n    )\r\n};\r\n\r\nexport default PageInfo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Footer = styled.footer`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 40px 0px;\r\n`;","import React from 'react';\r\nimport Button from \"./Button\";\r\nimport Icon from \"./Icon\";\r\nimport PageInfo from './PageInfo';\r\nimport { Footer } from './styled';\r\n\r\nconst Pagination = ({ type }) => {\r\n  return (\r\n    <Footer>\r\n      <Button\r\n        previous\r\n        buttonText=\"First\"\r\n        disabled={true}\r\n        body={\r\n          <>\r\n            <Icon\r\n              mobile\r\n              previous\r\n              disabled={true}\r\n              alt=\"back to first page symbol\"\r\n            />\r\n            <Icon\r\n              previous\r\n              disabled={true}\r\n              alt=\"back to previous page symbol\"\r\n            />\r\n          </>}\r\n      />\r\n      <Button\r\n        previous\r\n        buttonText=\"Previous\"\r\n        disabled={true}\r\n        body={\r\n          <>\r\n            <Icon\r\n              previous\r\n              disabled={true}\r\n              alt=\"back to first page symbol\"\r\n            />\r\n          </>}\r\n      />\r\n\r\n      <PageInfo type={type}/>\r\n\r\n      <Button\r\n        buttonText=\"Next\"\r\n        disabled={false}\r\n        body={\r\n          <>\r\n            <Icon\r\n              disabled={false}\r\n              alt=\"move to next page symbol\"\r\n            />\r\n          </>}\r\n      />\r\n      <Button\r\n        buttonText=\"Last\"\r\n        disabled={false}\r\n        body={\r\n          <>\r\n            <Icon\r\n              disabled={false}\r\n              alt=\"move to last page symbol\"\r\n            />\r\n            <Icon\r\n              mobile\r\n              disabled={false}\r\n              alt=\"move to last page symbol\"\r\n            />\r\n          </>}\r\n      />\r\n    </Footer>\r\n  )\r\n}\r\n\r\nexport default Pagination;","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { fetchPopularMovies, selectMovies, selectLoading, selectError } from \"../moviesSlice\";\r\nimport Main from \"../../../common/Main\";\r\nimport Section from \"../../../common/Section\";\r\nimport Tile from \"../../../common/Tile\";\r\nimport LoadingSpinner from \"../../../common/LoadingSpinner\";\r\nimport Pagination from \"../../../common/Pagination\";\r\n\r\nconst MoviesPage = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const movies = useSelector(selectMovies);\r\n  const loading = useSelector(selectLoading);\r\n  const error = useSelector(selectError);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchPopularMovies());\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      {loading && <LoadingSpinner /> }\r\n      {error && <div>ERROR!</div> }\r\n      {movies.results &&\r\n        <>\r\n          <Main>\r\n            <Section\r\n              grid\r\n              title=\"Popular Movies\"\r\n              body={\r\n                movies.results?.map(movie =>\r\n                  <Tile\r\n                    key={movie.id}\r\n                    title={movie.title}\r\n                    poster={movie.poster_path}\r\n                    year={movie.release_date}\r\n                    description={movie.overview}\r\n                    genres={movie.genre_ids}\r\n                    rate={movie.vote_average}\r\n                    votes={movie.vote_count}\r\n                  />\r\n                )\r\n              } />\r\n          </Main>\r\n          <Pagination type=\"movies\"/>\r\n        </>\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n","import React from 'react';\r\n\r\nconst PeoplePage = () => {\r\n    return (\r\n        <div>\r\n            People Page...\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PeoplePage;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LogoWrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n    letter-spacing: -1.5px;\r\n    text-transform: capitalize;\r\n    flex: 1 0;\r\n\r\n    \r\n    @media(max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n        font-size: 13px;\r\n    }\r\n`;\r\n\r\nexport const Icon = styled.img`\r\n    width: 40px;\r\n    margin-right: 12px;\r\n`;\r\n\r\n","import React from \"react\";\r\nimport { Icon, LogoWrapper } from \"./styled\";\r\nimport LogoImage from \"../../../assets/images/logo.svg\";\r\n\r\nconst Logo = () => (\r\n    <LogoWrapper>\r\n        <Icon src={LogoImage} alt=\"MovieBrowser logo\" />\r\n        Movie Browser\r\n    </LogoWrapper>\r\n);\r\n\r\nexport default Logo;","import styled from \"styled-components\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst activeClassName = \"link-active\";\r\n\r\nexport const StyledNavLink = styled(NavLink).attrs({ activeClassName })`\r\n    font-size: 14px;\r\n    font-weight: 600;\r\n    color: ${({ theme }) => theme.colors.White};\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n    margin: 10px 0;\r\n    padding: 10px;\r\n    margin-right: 30px;\r\n\r\n    &.${activeClassName} {\r\n        border: 1px solid ${({ theme }) => theme.colors.White};\r\n        border-radius: 24px;\r\n    }\r\n\r\n    \r\n    @media(max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n        font-size: 12px;\r\n        margin-right: 10px;\r\n    }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n    display: flex;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.mobileMax}) {\r\n        padding-left: 10px;\r\n    }\r\n`;","import React from \"react\";\r\nimport { toPeople, toMovies } from \"../../../routes\";\r\nimport { List, StyledNavLink } from \"./styled\";\r\n\r\nexport default () => {\r\n    return (\r\n        <nav>\r\n            <List>\r\n                <StyledNavLink to={toMovies()}>Movies</StyledNavLink>\r\n                <StyledNavLink to={toPeople()}>People</StyledNavLink>\r\n            </List>\r\n        </nav>\r\n    );\r\n}","export const toMovies = () => \"/movies\";\r\nexport const toPeople = () => \"/people\";","import styled from \"styled-components\";\r\nimport SearchIcon from \"../../../assets/images/search.svg\";\r\n\r\nexport const SearchInput = styled.input`\r\n    max-width: 432px;\r\n    width: 100%;\r\n    background: ${({ theme }) => theme.colors.White} url(${SearchIcon}) no-repeat center left 15px;\r\n    border: 1px solid ${({ theme }) => theme.colors.Mystic};\r\n    border-radius: 33px;\r\n    padding: 12px;\r\n    padding-left:64px;\r\n    font-size: 16px;\r\n    flex-shrink: 1;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.headerMax}) {\r\n        max-width: 100%;\r\n        font-size: 13px;\r\n        margin-bottom: 16px;\r\n    }\r\n`;","import React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { toMovies } from \"../../../routes\";\r\nimport { SearchInput } from \"./styled\";\r\n\r\nconst SearchPanel = () => {\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <SearchInput\r\n            placeholder={`Search for ${location.pathname.includes(toMovies()) ? \"movies\": \"people\"}...`}\r\n        />\r\n    )\r\n};\r\n\r\nexport default SearchPanel;","import styled from \"styled-components\";\r\n\r\nexport const StyledHeader = styled.header`\r\n    color: ${({ theme }) => theme.colors.White};\r\n    background-color: ${({ theme }) => theme.colors.Black};\r\n`;\r\n\r\nexport const HeaderContainer = styled.div`\r\n    max-width: 1368px;\r\n    margin: auto;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 10px;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.headerMax}) {\r\n        flex-wrap: wrap;\r\n    }\r\n`;\r\n\r\nexport const HeaderWrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: no-wrap;\r\n\r\n    @media(max-width: ${({ theme }) => theme.breakpoints.headerMax}) { \r\n        flex-basis: 100%; \r\n    }\r\n`;","import React from \"react\";\r\nimport Logo from \"./Logo\";\r\nimport Navigation from \"./Navigation\";\r\nimport SearchPanel from \"./SearchPanel\";\r\nimport { StyledHeader, HeaderContainer, HeaderWrapper } from \"./styled\";\r\n\r\nconst Header = () => (\r\n    <StyledHeader>\r\n        <HeaderContainer>\r\n            <HeaderWrapper>\r\n                <Logo />\r\n                <Navigation />\r\n            </HeaderWrapper>\r\n            <SearchPanel />\r\n        </HeaderContainer>\r\n    </StyledHeader>\r\n);\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { HashRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport MoviesPage from \"./features/movies/MoviesPage\";\r\nimport PeoplePage from \"./features/people/PeoplePage\";\r\nimport Header from \"./common/Header\";\r\nimport { toMovies, toPeople } from \"./routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Header />\r\n      <Switch>\r\n        <Route path={toMovies()}>\r\n          <MoviesPage />\r\n        </Route>\r\n        <Route path={toPeople()}>\r\n          <PeoplePage />\r\n        </Route>\r\n        <Route>\r\n          <Redirect to={toMovies()} />\r\n        </Route>\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const apiKey = \"8b1e08fa98bbe27c329cdd337e163ed0\";\r\nconst language = \"en-US\";\r\nconst keyAndLanguageParameters = `api_key=${apiKey}&language=${language}`;\r\n\r\nconst getMovieUrl = id => `https://api.themoviedb.org/3/movie/${id}?${keyAndLanguageParameters}`;\r\nconst getMovieCreditsUrl = id => `https://api.themoviedb.org/3/movie/${id}/credits?${keyAndLanguageParameters}`;\r\nconst getPopularMoviesUrl = page => `https://api.themoviedb.org/3/movie/popular?${keyAndLanguageParameters}&page=${page}`;\r\nconst getSearchMoviesByQueryUrl = (page, query) => `https://api.themoviedb.org/3/search/movie?${keyAndLanguageParameters}&query=${query}&page=${page}`;\r\n\r\nconst getPersonUrl = id => `https://api.themoviedb.org/3/person/${id}?${keyAndLanguageParameters}`;\r\nconst getPersonCreditsUrl = id => `https://api.themoviedb.org/3/person/${id}/movie_credits?${keyAndLanguageParameters}`;\r\nconst getPopularPeopleUrl = page => `https://api.themoviedb.org/3/person/popular?${keyAndLanguageParameters}&page=${page}`;\r\nconst getSearchPeopleByQueryUrl = (page, query) => `https://api.themoviedb.org/3/search/person?${keyAndLanguageParameters}&query=${query}&page=${page}`;\r\n\r\nconst getGenresUrl = () => `https://api.themoviedb.org/3/genre/movie/list?${keyAndLanguageParameters}`;\r\n\r\nconst fetchFromApi = async (url) => {\r\n    const response = await fetch(url);\r\n\r\n    if (!response.ok) {\r\n        new Error(response.statusText);\r\n    }\r\n\r\n    return await response.json();\r\n}\r\n\r\nexport const getMovie = id => fetchFromApi(getMovieUrl(id));\r\nexport const getMovieCredits = id => fetchFromApi(getMovieCreditsUrl(id));\r\nexport const getPopularMovies = page => fetchFromApi(getPopularMoviesUrl(page));\r\nexport const searchForMovies = (page, query) => fetchFromApi(getSearchMoviesByQueryUrl(page, query));\r\nexport const getPerson = id => fetchFromApi(getPersonUrl(id));\r\nexport const getPersonCredits = id => fetchFromApi(getPersonCreditsUrl(id));\r\nexport const getPopularPeople = page => fetchFromApi(getPopularPeopleUrl(page));\r\nexport const searchForPeople = (page, query) => fetchFromApi(getSearchPeopleByQueryUrl(page, query));\r\nexport const getGenres = () => fetchFromApi(getGenresUrl());","import { takeLatest, call, put, delay } from \"redux-saga/effects\";\r\nimport { getPopularMovies, getGenres } from \"../../../src/apiClient\";\r\nimport { fetchPopularMovies, fetchPopularMoviesSucces, fetchPopularMoviesError, setGenres } from \"./moviesSlice\";\r\n\r\nfunction* fetchPopularMoviesHandler() {\r\n    try {\r\n        yield delay(500);\r\n        const popularMovies = yield call(getPopularMovies);\r\n        const genres = yield call(getGenres);\r\n        yield put(fetchPopularMoviesSucces(popularMovies));\r\n        yield put(setGenres(genres));\r\n    } catch (error) {\r\n        yield put(fetchPopularMoviesError());\r\n        console.error(error);\r\n    }\r\n};\r\n\r\nexport function* moviesSaga() {\r\n    yield takeLatest(fetchPopularMovies.type, fetchPopularMoviesHandler);\r\n};","import { all } from \"redux-saga/effects\";\r\nimport { moviesSaga } from \"./features/movies/moviesSaga\";\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        moviesSaga(),\r\n    ]);\r\n};","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport moviesReducer from \"./features/movies/moviesSlice\"\r\nimport rootSaga from \"./rootSaga\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        movies: moviesReducer,\r\n    },\r\n    middleware: [sagaMiddleware],\r\n});\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { Provider } from 'react-redux';\r\nimport { GlobalStyles } from './GlobalStyles';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { theme } from './theme';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}